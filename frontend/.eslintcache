[{"/home/taten/AppAcademy/authenticate-me/frontend/src/index.js":"1","/home/taten/AppAcademy/authenticate-me/frontend/src/App.js":"2","/home/taten/AppAcademy/authenticate-me/frontend/src/store/index.js":"3","/home/taten/AppAcademy/authenticate-me/frontend/src/store/csrf.js":"4","/home/taten/AppAcademy/authenticate-me/frontend/src/store/session.js":"5","/home/taten/AppAcademy/authenticate-me/frontend/src/components/SignupFormPage/index.js":"6","/home/taten/AppAcademy/authenticate-me/frontend/src/components/Navigation/index.js":"7","/home/taten/AppAcademy/authenticate-me/frontend/src/components/Navigation/ProfileButton.js":"8","/home/taten/AppAcademy/authenticate-me/frontend/src/components/LoginFormModal/index.js":"9","/home/taten/AppAcademy/authenticate-me/frontend/src/components/LoginFormModal/LoginForm.js":"10","/home/taten/AppAcademy/authenticate-me/frontend/src/context/Modal.js":"11","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/index.js":"12","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/App.js":"13","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/store/csrf.js":"14","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/store/session.js":"15","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/context/Modal.js":"16","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/store/index.js":"17","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/Navigation/index.js":"18","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/Navigation/ProfileButton.js":"19","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/Browse/index.js":"20","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/store/browse.js":"21","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/ItemCard/index.js":"22","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/ProductPage/index.js":"23","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/ProductPageSmall/index.js":"24","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/Comment/index.js":"25","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/UserProfile/index.js":"26","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/store/cart.js":"27","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/Cart/index.js":"28","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/Cart/CartForm.js":"29","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/Cart/CartItem.js":"30","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/CommentForm/index.js":"31","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/store/comment.js":"32","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/Splash/index.js":"33","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/ItemCardSplash/index.js":"34","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/store/splash.js":"35","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/Footer/index.js":"36","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/EntryPage/index.js":"37","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/EntryPage/SignupForm/index.js":"38","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/EntryPage/LoginForm/index.js":"39","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/EntryPage/DemoForm/index.js":"40"},{"size":887,"mtime":1611353400910,"results":"41","hashOfConfig":"42"},{"size":763,"mtime":1611353384560,"results":"43","hashOfConfig":"42"},{"size":675,"mtime":1611351797950,"results":"44","hashOfConfig":"42"},{"size":1591,"mtime":1611350903970,"results":"45","hashOfConfig":"42"},{"size":1663,"mtime":1611352321680,"results":"46","hashOfConfig":"42"},{"size":2083,"mtime":1611352258830,"results":"47","hashOfConfig":"42"},{"size":753,"mtime":1611353364610,"results":"48","hashOfConfig":"42"},{"size":1096,"mtime":1611352511260,"results":"49","hashOfConfig":"42"},{"size":460,"mtime":1611353332940,"results":"50","hashOfConfig":"42"},{"size":1406,"mtime":1611353296090,"results":"51","hashOfConfig":"42"},{"size":837,"mtime":1611352800420,"results":"52","hashOfConfig":"42"},{"size":900,"mtime":1613258204810,"results":"53","hashOfConfig":"54"},{"size":2536,"mtime":1613258768950,"results":"55","hashOfConfig":"54"},{"size":1630,"mtime":1611612281870,"results":"56","hashOfConfig":"54"},{"size":1757,"mtime":1612983284316,"results":"57","hashOfConfig":"54"},{"size":875,"mtime":1611612281870,"results":"58","hashOfConfig":"54"},{"size":1328,"mtime":1612915971810,"results":"59","hashOfConfig":"54"},{"size":1358,"mtime":1613258619200,"results":"60","hashOfConfig":"54"},{"size":1617,"mtime":1613249231460,"results":"61","hashOfConfig":"54"},{"size":5604,"mtime":1613248927540,"results":"62","hashOfConfig":"54"},{"size":5586,"mtime":1613248646430,"results":"63","hashOfConfig":"54"},{"size":1446,"mtime":1612503977489,"results":"64","hashOfConfig":"54"},{"size":4009,"mtime":1612399533560,"results":"65","hashOfConfig":"54"},{"size":590,"mtime":1612333129884,"results":"66","hashOfConfig":"54"},{"size":2281,"mtime":1612070971052,"results":"67","hashOfConfig":"54"},{"size":1970,"mtime":1612750534340,"results":"68","hashOfConfig":"54"},{"size":2737,"mtime":1612060211902,"results":"69","hashOfConfig":"54"},{"size":1138,"mtime":1612757143890,"results":"70","hashOfConfig":"54"},{"size":1445,"mtime":1612757190190,"results":"71","hashOfConfig":"54"},{"size":2009,"mtime":1612750921530,"results":"72","hashOfConfig":"54"},{"size":3130,"mtime":1613259524910,"results":"73","hashOfConfig":"54"},{"size":1196,"mtime":1612393800790,"results":"74","hashOfConfig":"54"},{"size":1806,"mtime":1613253776040,"results":"75","hashOfConfig":"54"},{"size":308,"mtime":1612923593540,"results":"76","hashOfConfig":"54"},{"size":647,"mtime":1613244633300,"results":"77","hashOfConfig":"54"},{"size":573,"mtime":1612925381610,"results":"78","hashOfConfig":"54"},{"size":1108,"mtime":1613261412820,"results":"79","hashOfConfig":"54"},{"size":3889,"mtime":1613353839812,"results":"80","hashOfConfig":"54"},{"size":2358,"mtime":1613353802222,"results":"81","hashOfConfig":"54"},{"size":1288,"mtime":1614878723624,"results":"82","hashOfConfig":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19210r3",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"ohek5e",{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"108"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"108"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"108"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"108"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"108"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"108"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"108"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"108"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"108"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"108"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"108"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"108"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"108"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"108"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"108"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"108"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"108"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},"/home/taten/AppAcademy/authenticate-me/frontend/src/index.js",[],"/home/taten/AppAcademy/authenticate-me/frontend/src/App.js",[],"/home/taten/AppAcademy/authenticate-me/frontend/src/store/index.js",[],["185","186"],"/home/taten/AppAcademy/authenticate-me/frontend/src/store/csrf.js",[],"/home/taten/AppAcademy/authenticate-me/frontend/src/store/session.js",[],"/home/taten/AppAcademy/authenticate-me/frontend/src/components/SignupFormPage/index.js",[],"/home/taten/AppAcademy/authenticate-me/frontend/src/components/Navigation/index.js",[],"/home/taten/AppAcademy/authenticate-me/frontend/src/components/Navigation/ProfileButton.js",[],"/home/taten/AppAcademy/authenticate-me/frontend/src/components/LoginFormModal/index.js",[],"/home/taten/AppAcademy/authenticate-me/frontend/src/components/LoginFormModal/LoginForm.js",[],"/home/taten/AppAcademy/authenticate-me/frontend/src/context/Modal.js",[],"/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/index.js",[],["187","188"],"/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/App.js",["189","190","191"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport SignupFormPage from \"./components/EntryPage/SignupForm\";\r\nimport * as sessionActions from \"./store/session\";\r\nimport Navigation from \"./components/Navigation\";\r\nimport Browse from \"./components/Browse\"\r\nimport ProductPage from \"./components/ProductPage\";\r\nimport UserProfile from \"./components/UserProfile\";\r\nimport Cart from \"./components/Cart\";\r\nimport Splash from \"./components/Splash\"\r\nimport Footer from \"./components/Footer\";\r\nimport LoginFormPage from \"./components/EntryPage/LoginForm\"\r\nimport EntryPage from \"./components/EntryPage\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [signedIn, setSignedIn] = useState(false);\r\n  const user = useSelector(state => state.session.user)\r\n\r\n  useEffect(() => {\r\n    if(!isLoaded) dispatch(sessionActions.restoreUser()).then(() => setIsLoaded(true));\r\n    if(user) setSignedIn(true);\r\n  }, [dispatch, user]);\r\n\r\n  return (\r\n    <>\r\n      <>\r\n      {!signedIn &&\r\n      (\r\n        <>\r\n            {isLoaded && (\r\n              <Switch>\r\n\r\n                {/* <Route path=\"/demo\">\r\n                  <Demo />\r\n                </Route> */}\r\n\r\n                <Route path=\"/entry/:type\">\r\n                  <Navigation />\r\n                  <EntryPage setSignedIn={setSignedIn} signedIn={signedIn}/>\r\n                </Route>\r\n\r\n                <Route path=\"/\">\r\n                  <Splash />\r\n                </Route>\r\n\r\n              </Switch>\r\n        )}\r\n      </>\r\n      )}\r\n      </>\r\n      {signedIn &&\r\n      (\r\n        <>\r\n          <Navigation isLoaded={isLoaded} setSignedIn={setSignedIn}/>\r\n            {isLoaded && (\r\n              <Switch>\r\n\r\n                <Route path=\"/item/:id\">\r\n                  <ProductPage isLoaded={isLoaded} setSignedIn={setSignedIn}/>\r\n                </Route>\r\n\r\n                <Route path=\"/profile/:id\">\r\n                  <UserProfile isLoaded={isLoaded} setSignedIn={setSignedIn}/>\r\n                </Route>\r\n\r\n                <Route path=\"/cart\">\r\n                  <Cart isLoaded={isLoaded} setSignedIn={setSignedIn}/>\r\n                </Route>\r\n\r\n                <Route path=\"/\">\r\n                <Browse isLoaded={isLoaded} setSignedIn={setSignedIn}/>\r\n                </Route>\r\n\r\n              </Switch>\r\n        )}\r\n        <Footer />\r\n      </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/store/csrf.js",[],"/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/store/session.js",[],"/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/context/Modal.js",[],["192","193"],"/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/store/index.js",["194"],"import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport localForage from \"localforage\";\r\nimport * as storage from 'redux-storage';\r\nimport createEngine from 'redux-storage-engine-localstorage';\r\n\r\nimport sessionReducer from './session';\r\nimport cartReducer from \"./cart\";\r\nimport browseReducer from \"./browse\";\r\nimport splashReducer from \"./splash\";\r\n\r\nconst rootReducer = {\r\n  session: sessionReducer,\r\n  browse: browseReducer,\r\n  cart: cartReducer,\r\n  splash: splashReducer\r\n};\r\n\r\nconst finalReducer = storage.reducer(combineReducers(rootReducer));\r\nconst engine = createEngine('my-save-key');\r\nconst storageWare = storage.createMiddleware(engine);\r\n\r\nlet enhancer;\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n  enhancer = applyMiddleware(thunk, storageWare);\r\n} else {\r\n  const logger = require(\"redux-logger\").default;\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger, storageWare));\r\n}\r\n\r\nconst store = createStore(finalReducer, enhancer);\r\nconst load = storage.createLoader(engine);\r\n\r\nload(store)\r\n  .then((newState) => console.log('Loaded state:', newState))\r\n  .catch(() => console.log('Failed to load previous state'));\r\n\r\nexport default store;\r\n","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/Navigation/index.js",[],"/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/Navigation/ProfileButton.js",["195","196"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as sessionActions from '../../store/session';\r\nimport {useHistory} from 'react-router-dom';\r\nimport './Navigation.css'\r\nimport { clearRecentItems, populateBrowse } from \"../../store/browse\";\r\n\r\nfunction ProfileButton({ user }) {\r\n  const dispatch = useDispatch();\r\n  const [showMenu, setShowMenu] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const openMenu = () => {\r\n    if (showMenu) return;\r\n    setShowMenu(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!showMenu) return;\r\n\r\n    const closeMenu = () => {\r\n      setShowMenu(false);\r\n    };\r\n\r\n    document.addEventListener('click', closeMenu);\r\n\r\n    return () => document.removeEventListener(\"click\", closeMenu);\r\n  }, [showMenu]);\r\n\r\n  const logout = (e) => {\r\n    e.preventDefault();\r\n    dispatch(sessionActions.logout());\r\n    history.push('/')\r\n  };\r\n\r\n  const clearRecent = () => {\r\n    dispatch(clearRecentItems()).then(() => dispatch(populateBrowse(user)))\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile-menu-container\">\r\n      <button className=\"profile-outer-button underlined\" onClick={openMenu}>\r\n      <i className=\"far fa-user underlined\"></i>\r\n      </button>\r\n      {showMenu && (\r\n        <ul className=\"profile-dropdown\">\r\n          <li>Username: {user.username}</li>\r\n          <li>Email: {user.email}</li>\r\n          <li className=\"clear-recent-button\" onClick={e => clearRecent()} >\r\n          Clear Recent Items\r\n          </li>\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileButton;\r\n","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/Browse/index.js",["197","198","199","200","201"],"import React, { useState, useEffect } from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {populateBrowse} from '../../store/browse';\nimport ItemCard from '../ItemCard';\nimport './Browse.css'\n\n\nfunction Browse({isLoaded}) {\n\n    const dispatch = useDispatch();\n    const user = useSelector((state) => state.session.user);\n    const [browseLoaded, setBrowseLoaded] = useState(false);\n    const browseData = useSelector(state => state.browse);\n    const allItems = browseData.browseItems;\n    const categories = useSelector(state => state.browse.categories);\n\n    // FOR SEARCH\n    const [searching, setSearching] = useState(false);\n    const [searchInput, setSearchInput] = useState('');\n    const [categoryCheck, setCategoryCheck] = useState('');\n    const [update, setUpdate] = useState(false);\n\n    let results = searchInput.length > 0 ? allItems.filter(item => {\n        return ((searchInput.toLowerCase().split('').reduce((accum, letter) => {\n            if(item.name.toLowerCase().includes(letter)) accum++;\n            return accum;\n        }, 0) / searchInput.length) > .85)\n    }) : allItems\n\n    useEffect(() => {\n        if(user && !browseLoaded) dispatch(populateBrowse(user));\n        if(browseData) setBrowseLoaded(true);\n    }, [dispatch, user, browseData]);\n\n    useEffect(() => {\n    if(browseLoaded && !categoryCheck) {\n        const catNames = {}\n        Array.from(categories).forEach(cat => catNames[cat.name] = false);\n        setCategoryCheck(catNames)\n    }\n    }, [browseLoaded]);\n\n    const {favoriteItems, newlyAddedItems, recentlyVisited} = browseData;\n\n    return isLoaded && browseLoaded && (\n        <div className='main-page'>\n                <div className='search-area'>\n                    <form>\n                        <input className='search-input' onFocus={e => setSearching(true)} onBlur={e => {\n                            if(e.target.value.length == 0) setSearching(false);\n                        }} placeholder='S E A R C H' value={searchInput} onChange={e => setSearchInput(e.target.value)}></input>\n                        {/* {Array.from(categories).map(cat =>\n                            (<>\n                                <input type='checkbox' key={cat.id} checked={categoryCheck[cat.name]} name={cat.name} value={cat.name} onChange={e => {\n                                    setCategoryCheck(state => {\n                                        console.log('THE OLD STATE:     ', state)\n                                        state[e.target.value] = !state[e.target.value]\n                                        console.log('THE NEW STATE:     ', state)\n                                        return state\n                                    })\n                                }}></input>\n                                <label key={cat.name} htmlFor={cat.name}>{cat.name}</label>\n                                {console.log(cat.name)}\n                                </>)\n                            )} */}\n                        <button className='clear-search-button' onClick={e => {\n                            e.preventDefault()\n                            setSearchInput('')\n                            // setCategoryCheck(state => {\n                                //     Object.keys(state).forEach(thing => state[thing] = false)\n                                // })\n                            }}>C L E A R • S E A R C H</button>\n                    </form>\n                    {/* {searching && <p>Filter By Category</p>} */}\n                </div>\n            {!searching && (<div className='browse-page'>\n                <div className='browse-grid'>\n                    {!searching && (\n                        <>\n                        {/* <div className='outer-product-row'>\n                            <h2 className='section-header'>E V E R Y T H I N G</h2>\n                            <div className='products-browse product-row'>\n                                {browseItems.map((item) => <ItemCard key={item.id} item={item} />)}\n                            </div>\n                        </div> */}\n                        <div className='outer-product-row'>\n                            <h2 className='section-header'>F R E S H • U P</h2>\n                            <div className='products-new product-row'>\n                                {newlyAddedItems.map((item, index) => <ItemCard key={index} item={item} />)}\n                            </div>\n                        </div>\n                        <div className='outer-product-row'>\n                            <h2 className='section-header'>B E E N • T H E R E</h2>\n                            <div className='product-row'>\n                                {recentlyVisited.map((item, index) => <ItemCard key={index} item={item} />)}\n                            </div>\n                        </div>\n                        <div className='outer-product-row'>\n                            <h2 className='section-header'>M Y • F A V S</h2>\n                            <div className='products-favorites product-row'>\n                                {favoriteItems.map((item, index) => <ItemCard key={index} item={item} />)}\n                            </div>\n                        </div>\n                    </>\n                        )}\n                </div>\n            </div>)}\n            {searching && (\n                <div className='product-row'>\n                    {results.map((item, index) => <ItemCard key={index} item={item} />)}\n                </div>\n                )}\n        </div>\n    )\n}\n\nexport default Browse;\n","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/store/browse.js",[],"/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/ItemCard/index.js",["202","203"],"import {NavLink} from 'react-router-dom';\nimport { updateCurrentItem, updateCurrentPhoto, updateRecentItems } from '../../store/browse';\nimport './ItemCard.css'\nimport {useDispatch, useSelector} from 'react-redux';\nimport { addItem } from '../../store/cart';\n\nconst ItemCard = ({item}) => {\n\n    const dispatch = useDispatch();\n\n    const update = async () => {\n        await dispatch(updateCurrentItem(item))\n        await dispatch(updateCurrentPhoto(item.photos[0]))\n    }\n\n    return (\n        <div className='item-card-container'>\n            <NavLink to={`/item/${item.id}`} className='ItemCard-Link' onClick={e => {\n                update()\n                dispatch(updateRecentItems(item))\n                }}>\n                <div className=\"item-card\" style={{backgroundImage: `url(${item.photos[0]})`}}>\n                    <div className='product-info hide'>\n                        <h3 className='product-info-text'>{item.name}</h3>\n                        <p className='product-info-text'>{item.shortDescription}</p>\n                    </div>\n                    <div className='product-thumbnail-buy-holder'>\n                        <div className='product-thumbnail-buy hide'>\n                            <p className='product-thumbnail-price'>{`$${item.price.toFixed(2)}`}</p>\n                        </div>\n                    </div>\n                </div>\n            </NavLink>\n        </div>\n    )\n}\n\nexport default ItemCard;\n","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/ProductPage/index.js",["204","205","206","207"],"import {useSelector, useDispatch} from 'react-redux';\nimport ProductPageSmall from '../ProductPageSmall';\nimport {NavLink, useHistory, useParams} from 'react-router-dom';\nimport {useEffect, useState} from 'react';\nimport { favoriteItem, unfavoriteItem, updateCurrentItem, updateCurrentPhoto } from '../../store/browse';\nimport Comment from '../Comment';\nimport {addItem} from '../../store/cart'\nimport CommentForm from '../CommentForm'\nimport './ProductPage.css'\nimport {updateCurrentProfile} from '../../store/browse'\n\n\nconst ProductPage = ({url}) => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const itemId = parseInt((useParams().id), 10);\n\n    let photoUrl = useSelector(state => state.browse.currentPhoto)\n    let items = useSelector(state => state.browse.browseItems)\n    let item = useSelector(state => state.browse.currentItem)\n    let favs = useSelector(state => state.browse.favorites)\n    let user = useSelector(state => state.session.user)\n    const [update, toggleUpdate] = useState(false)\n\n    if(!item){\n        item = items.find(el => el.id === itemId);\n        dispatch(updateCurrentItem(item))\n    }\n\n    if(!photoUrl){\n        photoUrl = item.photos[0];\n        dispatch(updateCurrentPhoto(photoUrl))\n    }\n\n    return (\n        <>\n            <div className='product-page-content'>\n                <div className='product-page-flex'>\n                    <div className='product-page-left-half'>\n                        <img className='product-page-image' src={photoUrl}/>\n                        <div className='product-page-small-images'>\n                            {item.photos.map((image, index) => <ProductPageSmall key={image} url={image} index={index} />)}\n                        </div>\n                    </div>\n                    <div className='product-page-right-half'>\n                        <div className='product-page-right-organizer'>\n                            <div className='product-page-item-info'>\n                                <div className='product-page-item-header'>\n                                    <h2 className='product-page-item-name'>{item.name}</h2>\n                                    <p className='product-page-item-price'>${item.price.toFixed(2)}</p>\n                                </div>\n                                <p className='product-page-item-description'>{item.longDescription}</p>\n                                <div className='product-page-button-container'>\n                                    <button className='product-page-button' onClick={e => dispatch(addItem(item))}>A D D • T O • C A R T</button>\n                                    <button className='product-page-button' onClick={e => {\n                                        dispatch(updateCurrentProfile(item.User))\n                                        history.push(`/profile/${item.User.id}`)\n                                    }}>V I S I T • S E L L E R • P A G E</button>\n                                    {favs.includes(item.id) ? <button className='product-page-button' onClick={e => {\n                                        dispatch(unfavoriteItem(item, user.id))\n                                        toggleUpdate(prev => !prev)\n                                    }}>U N F A V O R I T E</button> : <button className='product-page-button' onClick={e => {\n                                        dispatch(favoriteItem(item, user.id))\n                                        toggleUpdate(prev => !prev)\n                                        }}>F A V O R I T E</button>}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <CommentForm />\n                {item.Comments && item.Comments.map(com => <Comment commentId = {com.id} key={com.id} title={com.title} content={com.content} author={com.User} rating={com.rating}/>)}\n            </div>\n        </>\n    )\n}\n\nexport default ProductPage;\n","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/ProductPageSmall/index.js",["208","209","210"],"import { NavLink } from \"react-router-dom\";\nimport {useSelector, useDispatch} from 'react-redux';\nimport { updateCurrentPhoto } from \"../../store/browse\";\nimport '../ProductPage/ProductPage.css'\n\n\nconst ProductPageSmall = ({url, index}) => {\n\n    const dispatch = useDispatch();\n    const item = useSelector(state => state.browse.currentItem);\n\n    const photoUpdate = (e) =>{\n        e.preventDefault();\n        dispatch(updateCurrentPhoto(url))\n    }\n\n    return (\n        <img onClick={e => photoUpdate(e)} src={url} className='small-images' />\n    )\n}\n\nexport default ProductPageSmall;\n","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/Comment/index.js",["211"],"import { useEffect, useState } from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport {populateBrowse, updateCurrentProfile} from '../../store/browse'\nimport { removeComment } from '../../store/comment';\nimport CommentForm from '../CommentForm';\n\nconst Comment = ({title, content, author, rating, commentId}) => {\n\n    const dispatch = useDispatch();\n    const [commentLoaded, setCommentLoaded] = useState(false);\n    const sessionUser = useSelector(state => state.session.user);\n    const [beingEdited, setBeingEdited] = useState(false);\n\n\n    useEffect(() => {\n        if(author && sessionUser){\n            setCommentLoaded(true)\n        }\n    },[author, sessionUser])\n\n    return (\n                <>\n                    {!beingEdited && (\n                        <>\n                            <div>\n                                <h3>{`${title} ${rating} Stars`}</h3>\n                                <NavLink to={`/profile/${author.id}`} onClick={e => dispatch(updateCurrentProfile(author))}>{`-${author.username}`}</NavLink>\n                            </div>\n                            <p>{content}</p>\n                            <div>\n                                {(sessionUser.id === author.id) && (\n                                    <>\n                                        <button onClick={e => setBeingEdited(true)}>Edit</button>\n                                        <button onClick={e => {\n                                            e.preventDefault()\n                                            dispatch(removeComment(commentId))\n                                            dispatch(populateBrowse(sessionUser))\n                                        }}>Delete</button>\n                                    </>\n                                )}\n                            </div>\n                        </>\n                    )}\n\n                    {beingEdited && (\n                    <>\n                        <CommentForm oldContent={content} oldTitle={title} oldRating={rating}/>\n                        <button onClick={e => setBeingEdited(false)}>Cancel</button>\n                    </>\n                    )}\n                </>\n                )\n\n}\n\nexport default Comment;\n","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/UserProfile/index.js",["212"],"import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {useParams} from 'react-router-dom';\nimport { followUser, unfollowUser } from '../../store/browse';\nimport ItemCard from '../ItemCard';\nimport './UserProfile.css'\n\nconst UserProfile = () => {\n\n    const dispatch = useDispatch();\n    const userId = parseInt(useParams().id,10)\n    const [profileLoaded, setProfileLoaded] = useState(false)\n\n    const userProfile = useSelector(state => state.browse.currentProfile);\n    const relatedItems = useSelector(state => state.browse.browseItems).filter(ele => ele.sellerId === userId);\n    const follows = useSelector(state => state.browse.follows)\n\n    useEffect(() => {\n        if(userProfile && relatedItems) setProfileLoaded(true);\n    }, [userProfile])\n\n    return profileLoaded && (\n        <>\n            <div className='profile-header-holder'>\n                <h2 className='profile-header-username'>{userProfile.username.split('').join(' ').toUpperCase()} ' S • P R O F I L E</h2>\n                {follows.includes(userProfile.id) ? <button className='profile-follow-button' onClick={e => dispatch(unfollowUser(userId, userProfile.id))}>U N • F O L L O W</button> : <button className='profile-follow-button' onClick={e => dispatch(followUser(userId, userProfile.id))}>F O L L O W</button>}\n            </div>\n            <h3>B I O</h3>\n            <p>{userProfile.bio}</p>\n            {relatedItems.length > 0 &&\n            (\n                <>\n                    <h3>{`${userProfile.username.split('').join(' ').toUpperCase()} • I S • C U R R E N T L Y • S E L L I N G`}</h3>\n                    <div className='profile-selling-container'>\n                        {relatedItems ? (relatedItems.map(item => <ItemCard className='profile-item-card' item={item} />)) : <h3>N O T H I N G</h3>}\n                    </div>\n                </>\n            )}\n        </>\n    )\n}\n\nexport default UserProfile;\n","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/store/cart.js",[],"/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/Cart/index.js",["213","214","215"],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadCart } from \"../../store/cart\";\n\nimport CartForm from \"./CartForm\";\n\nconst Cart = () => {\n\n    const [cartToggle, setCartToggle] = useState(false);\n    const dispatch = useDispatch();\n    const storage = window.localStorage;\n    const [cartLoaded, setCartLoaded] = useState(false);\n    const cartData = Object.values(useSelector(state => state.cart));\n    const cartTotal = cartData.reduce((accum, el) => {\n        console.log(el)\n        return accum + (el.cartItem.price * el.quantity);\n    },0)\n\n    console.log(cartTotal)\n\n    useEffect(() => {\n        if(cartData.length > 0){\n            setCartLoaded(true)\n        } else {\n            setCartLoaded(false)\n        }\n    }, [cartData, dispatch])\n\n    return cartLoaded && (\n        <>\n            <div className='whole-cart'>\n                <p className='cart-total'>{`C A R T • T O T A L : $${(cartTotal).toFixed(2)}`}</p>\n                <CartForm cartItems={cartData} setCartToggle={setCartToggle}/>\n            </div>\n        </>\n    )\n}\n\nexport default Cart;\n","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/Cart/CartForm.js",["216"],"import { useState, useEffect } from \"react\";\nimport CartItem from \"./CartItem\";\nimport {buyItem,  emptyItem} from '../../store/cart.js'\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst CartForm = ({cartItems, setCartToggle}) => {\n\n    const [cartLoaded, setCartLoaded] = useState(false);\n    const [formLoad, setFormLoad] = useState(false);\n    const dispatch = useDispatch();\n    const userId = useSelector(state => state.session.user.id)\n\n    useEffect(() => {\n        if(cartItems) setCartLoaded(true);\n    }, [cartItems])\n\n    return cartLoaded && (\n        <>\n            <div className='cart-form-holder'>\n                <div className='cart-main-button-holder'>\n                    <button className='cart-main-buttons' onClick={e => {\n                        e.preventDefault();\n                        dispatch(buyItem(cartItems, userId))}}>B U Y</button>\n                    <button className='cart-main-buttons' onClick={e =>{\n                        e.preventDefault()\n                        dispatch(emptyItem());\n                    }}>E M P T Y</button>\n                </div>\n                <form className='cart-form'>\n                    <table>\n                        {cartItems.map(item => <CartItem key={item.id} cartEntry={item} formToggle={setFormLoad} cartToggler={setCartToggle} />)}\n                    </table>\n                </form>\n            </div>\n        </>\n    )\n}\n\nexport default CartForm;\n","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/Cart/CartItem.js",["217","218"],"import {removeItem, plusItem, minusItem} from '../../store/cart';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useEffect, useState} from 'react';\nimport './Cart.css'\n\nconst CartItem = ({cartEntry, formToggle, cartToggler}) => {\n\n    const [stateSwitch, toggleSwitch] = useState(false);\n    const dispatch = useDispatch();\n\n    const toggler = () => {\n        // toggleSwitch(prev => !prev);\n        // formToggle(prev => !prev);\n        cartToggler(prev => !prev)\n    }\n\n    useEffect(() => {\n    }, [stateSwitch, dispatch])\n\n    return cartEntry && (\n        <div>\n            <tr className='cart-item-row'>\n                <td className='cart-item-image' style={{backgroundImage: `url(${cartEntry.cartItem.photos[0]})`}}>\n                </td>\n                <td className='cart-item-data'>\n                    <label className='cart-item-label' htmlFor={cartEntry.cartItem.name}>{cartEntry.cartItem.name}</label>\n                </td>\n                <td className='cart-item-data'>\n                    <input className='cart-item-quantity' value={cartEntry.quantity} type='number'/>\n                </td>\n                <td className='cart-item-data'>\n                    <button className='cart-item-buttons' onClick={e => {\n                    e.preventDefault();\n                    dispatch(plusItem(cartEntry.cartItem.id));\n                    toggler()\n                    }}>+</button>\n                    <button className='cart-item-buttons' onClick={e => {\n                    e.preventDefault()\n                    dispatch(minusItem(cartEntry.cartItem.id));\n                    toggler()\n                    }}>-</button>\n                    <button className='cart-item-buttons' onClick={e => {\n                        e.preventDefault()\n                        dispatch(removeItem(cartEntry.cartItem.id));\n                        toggler()\n                        }}>Remove</button>\n                </td>\n            </tr>\n        </div>\n    )\n}\n\nexport default CartItem;\n","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/CommentForm/index.js",["219","220","221"],"import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { populateBrowse } from '../../store/browse';\nimport { createComment } from '../../store/comment';\nimport './CommentForm.css'\n\nconst CommentForm = ({oldContent, oldRating, oldTitle}) => {\n\n    const dispatch = useDispatch()\n    const [formLoaded, setFormLoaded] = useState(false);\n    const item = useSelector(state => state.browse.currentItem);\n    const itemName = item.name;\n    const itemId = useSelector(state => state.browse.currentItem.id);\n    const user = useSelector(state => state.session.user)\n    const userId = user.id;\n\n    const [content, setContent] = useState('');\n    if(oldContent) setContent(oldContent);\n    const [rating, setRating] = useState(5);\n    if(oldRating) setRating(oldRating);\n    const [title, setTitle] = useState('');\n    if(oldTitle) setTitle(oldTitle);\n\n    // useEffect(() => {\n\n    // },[])\n\n    return (\n        <form className='CommentForm-form'>\n            <table>\n                <thead colSpan='2'>\n                    <tr>\n                        <th>\n                            <h3>Tell us about {itemName}:</h3>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>Title:</td>\n                        <td>\n                            <input defaultValue={title} onChange={e => setTitle(e.target.value)}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Comment:</td>\n                        <td>\n                            <textarea defaultValue={content} onChange={e => setContent(e.target.value)}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Rating:</td>\n                        <td>\n                            <input type='number' min='1' max='5' name='rating' defaultValue={rating}/>\n                            <button onClick={e => {\n                                e.preventDefault();\n                                if(rating < 5) setRating(prev => prev + 1);\n                                }}>+</button>\n                            <button onClick={e => {\n                                e.preventDefault()\n                                if(rating > 1) setRating(prev => prev - 1)\n                                }}>-</button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <button onClick={e => {\n                e.preventDefault()\n                dispatch(createComment({userId, content, rating, title, itemId}))\n                dispatch(populateBrowse(user))\n                setRating(5)\n                setContent('')\n                setTitle('');\n            }\n                }>Submit</button>\n            <button onClick={ e => {\n                e.preventDefault()\n                setRating(5)\n                setContent('')\n                setTitle('');\n            }\n            }>Clear</button>\n        </form>\n    )\n\n}\n\nexport default CommentForm;\n","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/store/comment.js",["222"],"import { fetch } from './csrf';\n\nconst REMOVE = 'comment/remove'\nconst EDIT = 'comment/edit'\nconst POST = 'comment/create'\n\n\nconst remove = (itemData) => {\n    return {\n        type: REMOVE\n    }\n}\n\nconst edit = (info) => {\n    return {\n        type: EDIT\n    }\n}\n\nconst post = (info) => {\n    return {\n        type: POST\n    }\n}\n\nexport const removeComment = (commentId) => async (dispatch) => {\n    await fetch('/api/comment/', {\n        method: 'delete',\n        body: JSON.stringify({\n            commentId\n        }),\n    })\n    dispatch(remove())\n}\n\n\n\nexport const createComment = ({userId, itemId, rating, title, content}) => async (dispatch) => {\n    await fetch('/api/comment/', {\n        method: 'post',\n        body: JSON.stringify({\n            userId,\n            itemId,\n            content,\n            rating,\n            title\n        }),\n    })\n    dispatch(post())\n}\n\nconst initialState = {};\n\nconst browseReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case REMOVE:\n            break;\n        case EDIT:\n            break;\n        case POST:\n            break;\n        default:\n            return state;\n    }\n}\n\nexport default browseReducer;\n","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/Splash/index.js",["223","224","225","226","227"],"import React, { useState, useEffect } from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport {populateSplash} from '../../store/splash';\nimport ItemCardSplash from '../ItemCardSplash';\nimport './Splash.css'\nimport * as sessionActions from \"../../store/session\"\n\nfunction Splash() {\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const {splashItems} = useSelector(state => state.splash);\n    let splashItemsShort;\n\n    useEffect(async () => {\n        await dispatch(populateSplash()).then(() => {\n            if(splashItems) splashItemsShort = splashItems.slice(0,12)\n        })\n    }, [])\n\n    const demoLogin = e => {\n        e.preventDefault();\n        dispatch(sessionActions.login({credential: \"demo@user.io\", password: \"password\"}))\n    }\n\n    return (\n        <div className=\"splash-page\">\n            <div className=\"splash-center-container\">\n                <h1 className=\"splash-header\">S O U R C E D</h1>\n                <p>WHO ARE YOU BUYING FROM?</p>\n            </div>\n            <div className=\"splash-lower-container\">\n                <button onClick={e => history.push('/entry/1')} className=\"splash-button\">L O G • I N</button>\n                <button onClick={e => history.push('/entry/3')} className=\"splash-button\">D E M O</button>\n                <button onClick={e => history.push('/entry/2')} className=\"splash-button\">S I G N • U P</button>\n            </div>\n            <div className='splash-grid'>\n                {splashItems.map( item => <ItemCardSplash item={item} />)}\n            </div>\n            <div className='splash-grid-2'>\n                {splashItems.map( item => <ItemCardSplash item={item} />)}\n            </div>\n        </div>\n    )\n\n}\n\nexport default Splash;\n","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/ItemCardSplash/index.js",[],"/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/store/splash.js",[],"/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/Footer/index.js",[],"/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/EntryPage/index.js",["228","229","230","231","232"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, useParams } from \"react-router-dom\";\n\nimport './EntryPage.css';\nimport LoginForm from \"./LoginForm\";\nimport SignupForm from \"./SignupForm\";\nimport DemoForm from \"./DemoForm\"\n\nfunction EntryPage({setSignedIn}) {\n  const dispatch = useDispatch();\n  const {type} = useParams()\n  const sessionUser = useSelector((state) => state.session.user);\n\n  if (sessionUser) return <Redirect to=\"/\" />;\n\n  return (\n    <div className=\"entry-page\">\n      <div className = \"inner-entry-page\">\n        {type == 1 && <LoginForm />}\n        {type == 2 && <SignupForm />}\n        {type == 3 && <DemoForm />}\n        <div className=\"mission-statement\">\n          {\"With the ability to view seller bios, follow those that you connect with, and view new items from those sellers on your dashboard, there arises the opportunity to buy from sellers you trust, and put money into people you support. Welcome\".split(' ').join('  ').toUpperCase()}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default EntryPage;\n","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/EntryPage/SignupForm/index.js",["233"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as sessionActions from \"../../../store/session\";\r\nimport validator from 'validator';\r\n\r\nimport '../EntryPage.css';\r\n\r\nfunction SignupForm({setSignedIn}) {\r\n  const dispatch = useDispatch();\r\n  const sessionUser = useSelector((state) => state.session.user);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  if (sessionUser) return <Redirect to=\"/\" />;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password === confirmPassword) {\r\n      setErrors([]);\r\n      return dispatch(sessionActions.signup({ email, username, password, bio }))\r\n        .then(res => {\r\n          if(!res.data.errors) setSignedIn(true)})\r\n        .catch(res => {\r\n          if (res.data && res.data.errors) setErrors(res.data.errors);\r\n        });\r\n    }\r\n    return setErrors(['Confirm Password field must be the same as the Password field']);\r\n  };\r\n\r\n  return (\r\n        <form className=\"entry-form\" onSubmit={handleSubmit}>\r\n          <table className=\"entry-form-table\">\r\n            <thead>\r\n              <tr>\r\n                <th colSpan=\"2\" className=\"entry-form-table-header\">\r\n                  S I G N • U P\r\n                  <ul>\r\n                    {errors.map((error, idx) => <li key={idx}>{error}</li>)}\r\n                  </ul>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                <input\r\n                  className=\"entry-form-field\"\r\n                  type=\"text\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  placeholder=\"E M A I L\"\r\n                  required/>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    placeholder=\"U S E R N A M E\"\r\n                    className=\"entry-form-field\"\r\n                    type=\"text\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    required/>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    placeholder=\"P A S S W O R D\"\r\n                    className=\"entry-form-field\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required/>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    placeholder=\"C O N F I R M • P A S S W O R D\"\r\n                    className=\"entry-form-field\"\r\n                    type=\"password\"\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    required/>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <textarea className=\"entry-form-field entry-form-bio\" placeholder=\"Tell us a little about yourself. If you sell an item, this bio will be available to other users.\" value={bio} onChange={e => setBio(e.target.value)}></textarea>\r\n                </td>\r\n              </tr>\r\n              <tr className=\"entry-submit-container\">\r\n                  <button colSpan=\"2\" className=\"entry-submit-button\" type=\"submit\" >S U B M I T</button>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </form>\r\n  );\r\n}\r\n\r\nexport default SignupForm;\r\n","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/EntryPage/LoginForm/index.js",["234","235","236"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as sessionActions from \"../../../store/session\";\nimport validator from 'validator';\n\nimport '../EntryPage.css';\n\nfunction LoginForm({setSignedIn}) {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector((state) => state.session.user);\n  const [email, setEmail] = useState(\"\");\n  const [credential, setCredential] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState([]);\n\n  if (sessionUser) return <Redirect to=\"/\" />;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrors([]);\n    return dispatch(sessionActions.login({ credential, password }))\n      .catch((res) => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      });\n  }\n\n  return (\n        <form className=\"entry-form\" onSubmit={handleSubmit}>\n          <table className=\"entry-form-table\">\n            <thead>\n              <tr>\n                <th className=\"entry-form-table-header\">\n                  L O G I N\n                  <ul>\n                    {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n                  </ul>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                <input\n                  className=\"entry-form-field\"\n                  type=\"text\"\n                  value={credential}\n                  onChange={(e) => setCredential(e.target.value)}\n                  placeholder=\"E M A I L or U S E R N A M E\"\n                  required/>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <input\n                    placeholder=\"P A S S W O R D\"\n                    className=\"entry-form-field\"\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required/>\n                </td>\n              </tr>\n              <tr className=\"entry-submit-container\">\n                  <button colSpan=\"2\" className=\"entry-submit-button\" type=\"submit\" >S U B M I T</button>\n              </tr>\n            </tbody>\n          </table>\n        </form>\n  );\n}\n\nexport default LoginForm;\n","/home/taten/AppAcademy/etsyClone/Sourced/frontend/src/components/EntryPage/DemoForm/index.js",["237"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as sessionActions from \"../../../store/session\";\n\nimport \"../EntryPage.css\";\n\nfunction DemoForm({ setSignedIn }) {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector((state) => state.session.user);\n\n  if (sessionUser) return <Redirect to=\"/\" />;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    return dispatch(\n      sessionActions.login({\n        credential: \"demo@user.io\",\n        password: \"password\",\n      }),\n    );\n  };\n\n  return (\n    <form className=\"entry-form\" onSubmit={handleSubmit}>\n      <table className=\"entry-form-table\">\n        <thead>\n          <tr>\n            <th colSpan=\"2\" className=\"entry-form-table-header\">\n              E N T E R • A S • D E M O • U S E R\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr className=\"entry-submit-container\">\n            <button\n              onClick={handleSubmit}\n              colSpan=\"2\"\n              className=\"entry-submit-button\"\n              type=\"submit\">\n              E N T E R\n            </button>\n          </tr>\n        </tbody>\n      </table>\n    </form>\n  );\n}\n\nexport default DemoForm;\n",{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"238","replacedBy":"242"},{"ruleId":"240","replacedBy":"243"},{"ruleId":"244","severity":1,"message":"245","line":4,"column":8,"nodeType":"246","messageId":"247","endLine":4,"endColumn":22},{"ruleId":"244","severity":1,"message":"248","line":13,"column":8,"nodeType":"246","messageId":"247","endLine":13,"endColumn":21},{"ruleId":"249","severity":1,"message":"250","line":25,"column":6,"nodeType":"251","endLine":25,"endColumn":22,"suggestions":"252"},{"ruleId":"238","replacedBy":"253"},{"ruleId":"240","replacedBy":"254"},{"ruleId":"244","severity":1,"message":"255","line":3,"column":8,"nodeType":"246","messageId":"247","endLine":3,"endColumn":19},{"ruleId":"244","severity":1,"message":"256","line":2,"column":23,"nodeType":"246","messageId":"247","endLine":2,"endColumn":34},{"ruleId":"244","severity":1,"message":"257","line":30,"column":9,"nodeType":"246","messageId":"247","endLine":30,"endColumn":15},{"ruleId":"244","severity":1,"message":"258","line":21,"column":12,"nodeType":"246","messageId":"247","endLine":21,"endColumn":18},{"ruleId":"244","severity":1,"message":"259","line":21,"column":20,"nodeType":"246","messageId":"247","endLine":21,"endColumn":29},{"ruleId":"249","severity":1,"message":"260","line":33,"column":8,"nodeType":"251","endLine":33,"endColumn":36,"suggestions":"261"},{"ruleId":"249","severity":1,"message":"262","line":41,"column":8,"nodeType":"251","endLine":41,"endColumn":22,"suggestions":"263"},{"ruleId":"264","severity":1,"message":"265","line":50,"column":54,"nodeType":"266","messageId":"267","endLine":50,"endColumn":56},{"ruleId":"244","severity":1,"message":"256","line":4,"column":22,"nodeType":"246","messageId":"247","endLine":4,"endColumn":33},{"ruleId":"244","severity":1,"message":"268","line":5,"column":10,"nodeType":"246","messageId":"247","endLine":5,"endColumn":17},{"ruleId":"244","severity":1,"message":"269","line":3,"column":9,"nodeType":"246","messageId":"247","endLine":3,"endColumn":16},{"ruleId":"244","severity":1,"message":"270","line":4,"column":9,"nodeType":"246","messageId":"247","endLine":4,"endColumn":18},{"ruleId":"244","severity":1,"message":"258","line":25,"column":12,"nodeType":"246","messageId":"247","endLine":25,"endColumn":18},{"ruleId":"271","severity":1,"message":"272","line":42,"column":25,"nodeType":"273","endLine":42,"endColumn":77},{"ruleId":"244","severity":1,"message":"269","line":1,"column":10,"nodeType":"246","messageId":"247","endLine":1,"endColumn":17},{"ruleId":"244","severity":1,"message":"274","line":10,"column":11,"nodeType":"246","messageId":"247","endLine":10,"endColumn":15},{"ruleId":"271","severity":1,"message":"272","line":18,"column":9,"nodeType":"273","endLine":18,"endColumn":81},{"ruleId":"244","severity":1,"message":"275","line":11,"column":12,"nodeType":"246","messageId":"247","endLine":11,"endColumn":25},{"ruleId":"249","severity":1,"message":"276","line":20,"column":8,"nodeType":"251","endLine":20,"endColumn":21,"suggestions":"277"},{"ruleId":"244","severity":1,"message":"278","line":3,"column":10,"nodeType":"246","messageId":"247","endLine":3,"endColumn":18},{"ruleId":"244","severity":1,"message":"279","line":9,"column":12,"nodeType":"246","messageId":"247","endLine":9,"endColumn":22},{"ruleId":"244","severity":1,"message":"280","line":11,"column":11,"nodeType":"246","messageId":"247","endLine":11,"endColumn":18},{"ruleId":"244","severity":1,"message":"281","line":9,"column":12,"nodeType":"246","messageId":"247","endLine":9,"endColumn":20},{"ruleId":"244","severity":1,"message":"256","line":2,"column":22,"nodeType":"246","messageId":"247","endLine":2,"endColumn":33},{"ruleId":"244","severity":1,"message":"282","line":8,"column":25,"nodeType":"246","messageId":"247","endLine":8,"endColumn":37},{"ruleId":"244","severity":1,"message":"270","line":1,"column":10,"nodeType":"246","messageId":"247","endLine":1,"endColumn":19},{"ruleId":"244","severity":1,"message":"283","line":10,"column":12,"nodeType":"246","messageId":"247","endLine":10,"endColumn":22},{"ruleId":"244","severity":1,"message":"284","line":10,"column":24,"nodeType":"246","messageId":"247","endLine":10,"endColumn":37},{"ruleId":"244","severity":1,"message":"285","line":14,"column":7,"nodeType":"246","messageId":"247","endLine":14,"endColumn":11},{"ruleId":"244","severity":1,"message":"286","line":1,"column":17,"nodeType":"246","messageId":"247","endLine":1,"endColumn":25},{"ruleId":"249","severity":1,"message":"287","line":16,"column":15,"nodeType":"288","endLine":20,"endColumn":6},{"ruleId":"244","severity":1,"message":"289","line":18,"column":29,"nodeType":"246","messageId":"247","endLine":18,"endColumn":45},{"ruleId":"249","severity":1,"message":"290","line":18,"column":48,"nodeType":"291","endLine":18,"endColumn":71},{"ruleId":"244","severity":1,"message":"292","line":22,"column":11,"nodeType":"246","messageId":"247","endLine":22,"endColumn":20},{"ruleId":"244","severity":1,"message":"286","line":1,"column":17,"nodeType":"246","messageId":"247","endLine":1,"endColumn":25},{"ruleId":"244","severity":1,"message":"293","line":11,"column":9,"nodeType":"246","messageId":"247","endLine":11,"endColumn":17},{"ruleId":"264","severity":1,"message":"265","line":20,"column":15,"nodeType":"266","messageId":"267","endLine":20,"endColumn":17},{"ruleId":"264","severity":1,"message":"265","line":21,"column":15,"nodeType":"266","messageId":"267","endLine":21,"endColumn":17},{"ruleId":"264","severity":1,"message":"265","line":22,"column":15,"nodeType":"266","messageId":"267","endLine":22,"endColumn":17},{"ruleId":"244","severity":1,"message":"294","line":5,"column":8,"nodeType":"246","messageId":"247","endLine":5,"endColumn":17},{"ruleId":"244","severity":1,"message":"294","line":5,"column":8,"nodeType":"246","messageId":"247","endLine":5,"endColumn":17},{"ruleId":"244","severity":1,"message":"295","line":12,"column":10,"nodeType":"246","messageId":"247","endLine":12,"endColumn":15},{"ruleId":"244","severity":1,"message":"296","line":12,"column":17,"nodeType":"246","messageId":"247","endLine":12,"endColumn":25},{"ruleId":"244","severity":1,"message":"286","line":1,"column":17,"nodeType":"246","messageId":"247","endLine":1,"endColumn":25},"no-native-reassign",["297"],"no-negated-in-lhs",["298"],["297"],["298"],"no-unused-vars","'SignupFormPage' is defined but never used.","Identifier","unusedVar","'LoginFormPage' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLoaded'. Either include it or remove the dependency array.","ArrayExpression",["299"],["297"],["298"],"'localForage' is defined but never used.","'useSelector' is defined but never used.","'logout' is assigned a value but never used.","'update' is assigned a value but never used.","'setUpdate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'browseLoaded'. Either include it or remove the dependency array.",["300"],"React Hook useEffect has missing dependencies: 'categories' and 'categoryCheck'. Either include them or remove the dependency array.",["301"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'addItem' is defined but never used.","'NavLink' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'item' is assigned a value but never used.","'commentLoaded' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'relatedItems'. Either include it or remove the dependency array.",["302"],"'loadCart' is defined but never used.","'cartToggle' is assigned a value but never used.","'storage' is assigned a value but never used.","'formLoad' is assigned a value but never used.","'toggleSwitch' is assigned a value but never used.","'formLoaded' is assigned a value but never used.","'setFormLoaded' is assigned a value but never used.","'edit' is assigned a value but never used.","'useState' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'splashItemsShort' is assigned a value but never used.","Assignments to the 'splashItemsShort' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'demoLogin' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'validator' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},"Update the dependencies array to be: [dispatch, isLoaded, user]",{"range":"311","text":"312"},"Update the dependencies array to be: [dispatch, user, browseData, browseLoaded]",{"range":"313","text":"314"},"Update the dependencies array to be: [browseLoaded, categories, categoryCheck]",{"range":"315","text":"316"},"Update the dependencies array to be: [relatedItems, userProfile]",{"range":"317","text":"318"},[1078,1094],"[dispatch, isLoaded, user]",[1265,1293],"[dispatch, user, browseData, browseLoaded]",[1511,1525],"[browseLoaded, categories, categoryCheck]",[791,804],"[relatedItems, userProfile]"]